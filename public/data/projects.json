{
  "projects": [
    {
      "id": 1,
      "title": "期貨高頻交易系統",
      "description": "為金融機構開發的高頻交易系統，支援多策略並行運作，每秒可處理上千筆交易",
      "fullDescription": "這是一個為專業交易機構設計的高頻交易系統，採用 C# .NET 開發，具備極低延遲的交易執行能力。系統支援多種交易策略的並行運作，包含套利、做市、趨勢追蹤等策略。從圖片中可見系統能即時監控各種期貨商品價格，提供完整的交易數據與分析功能。",
      "category": "trading",
      "image": "/images/projects/trading-system.jpg",
      "gallery": [
        "/images/projects/trading-system-1.jpg",
        "/images/projects/trading-system-2.jpg",
        "/images/projects/trading-system-3.jpg"
      ],
      "features": [
        "微秒級延遲的交易執行",
        "支援多策略並行運作",
        "即時風險控制系統",
        "完整的期貨商品監控",
        "視覺化交易數據分析",
        "多商品同時監控與交易"
      ],
      "technologies": [ "C#", ".NET Core", ".NET 6", "WebSocket", "SignalR", "MS SQL", "期貨API" ],
      "status": "production",
      "date": "2021-12-01",
      "duration": "24 個月 持續開發中",
      "teamSize": "個人專案",
      "challenges": [
        {
          "title": "延遲優化",
          "solution": "使用記憶體池和無鎖資料結構，將交易延遲降低到微秒級"
        },
        {
          "title": "高併發處理",
          "solution": "實現事件驅動架構，支援每秒處理上千筆交易"
        },
        {
          "title": "多商品監控",
          "solution": "建立高效的數據管道，同時監控數十種期貨商品價格變化"
        }
      ],
      "github": null,
      "demo": null
    },
    {
      "id": 2,
      "title": "Facebook 粉絲專頁管理系統",
      "description": "智能化 Facebook 粉絲專頁管理工具，支援貼文排程、粉絲互動分析、自動回覆等功能",
      "fullDescription": "專為社群媒體經營者設計的 Facebook 粉絲專頁管理系統，整合 Facebook Graph API，提供完整的社群經營解決方案。系統具備貼文管理、粉絲互動追蹤、數據分析、自動化回覆等功能，大幅提升社群經營效率。支援多粉絲專頁統一管理，讓社群營運更加便利。",
      "category": "web",
      "image": "/images/projects/facebook-admin.jpg",
      "gallery": [
        "/images/projects/facebook-admin-1.jpg",
        "/images/projects/facebook-admin-2.jpg",
        "/images/projects/facebook-admin-3.jpg"
      ],
      "features": [
        "Facebook Graph API 整合",
        "貼文排程與自動發佈",
        "粉絲互動數據分析",
        "自動回覆與客服功能",
        "多粉絲專頁統一管理",
        "貼文效果追蹤分析",
        "留言與私訊管理",
        "粉絲成長趨勢分析"
      ],
      "technologies": [ "C#", ".NET Core", "Facebook Graph API", "Vue.js", "Element Plus", "MS SQL" ],
      "status": "production",
      "date": "2025-05-15",
      "duration": "6 個月",
      "teamSize": "個人專案",
      "challenges": [
        {
          "title": "API 權限管理",
          "solution": "實現安全的 OAuth 2.0 認證流程，確保用戶數據安全"
        },
        {
          "title": "大量數據處理",
          "solution": "採用分批處理和快取機制，優化大量粉絲數據的載入速度"
        },
        {
          "title": "即時同步",
          "solution": "使用 WebSocket 實現粉絲專頁數據的即時同步更新"
        }
      ],
      "github": null,
      "demo": null
    },
    {
      "id": 3,
      "title": "Line Bot 智慧客服系統",
      "description": "多功能 Line Bot 客服助手，支援智能對話、訂單查詢、客服轉接等企業級功能",
      "fullDescription": "為企業量身打造的 Line Bot 智慧客服系統，整合 Line Messaging API 與自然語言處理技術，提供24小時不間斷的客戶服務。系統具備智能關鍵字識別、多媒體訊息處理、人工客服轉接、客戶資料管理等完整功能，大幅提升客戶服務效率與滿意度。",
      "category": "bot",
      "image": "/images/projects/line-bot.jpg",
      "gallery": [
        "/images/projects/line-bot-1.jpg",
        "/images/projects/line-bot-2.jpg",
        "/images/projects/line-bot-3.jpg"
      ],
      "features": [
        "智能關鍵字識別與回覆",
        "訂單狀態即時查詢",
        "人工客服無縫轉接",
        "多媒體訊息支援",
        "客戶資料自動建檔",
        "常見問題自動回答",
        "業務流程引導",
        "數據統計與分析"
      ],
      "technologies": [ "C#", ".NET Core", "Line Messaging API", "Azure Bot Service", "MS SQL", "Redis" ],
      "status": "production",
      "date": "2023-06-20",
      "duration": "4 個月",
      "teamSize": "2 人團隊",
      "challenges": [
        {
          "title": "高併發處理",
          "solution": "採用訊息佇列和非同步處理，確保大量用戶同時使用時的穩定性"
        },
        {
          "title": "對話流程設計",
          "solution": "建立彈性的對話狀態機制，支援複雜的多輪對話場景"
        }
      ],
      "github": null,
      "demo": null
    },
    {
      "id": 4,
      "title": "Telegram Bot 多功能助手",
      "description": "功能豐富的 Telegram Bot，提供遊戲輔助、資訊查詢、群組管理等多元化服務",
      "fullDescription": "專為 Telegram 平台設計的多功能機器人助手，支援遊戲社群管理、即時資訊查詢、用戶互動等豐富功能。機器人具備智能指令識別、權限管理、數據統計等企業級特性，適用於各種類型的社群與個人使用需求。",
      "category": "bot",
      "image": "/images/projects/telegram-bot.jpg",
      "gallery": [
        "/images/projects/telegram-bot-1.jpg",
        "/images/projects/telegram-bot-2.jpg",
        "/images/projects/telegram-bot-3.jpg"
      ],
      "features": [
        "智能指令識別與處理",
        "遊戲資料查詢與輔助",
        "群組管理與權限控制",
        "自動化任務排程",
        "用戶數據統計分析",
        "即時通知與提醒功能",
        "多語言支援",
        "可擴展的插件架構"
      ],
      "technologies": [ "C#", ".NET Core", "Telegram Bot API", "MS SQL" ],
      "status": "production",
      "date": "2023-08-20",
      "duration": "5 個月",
      "teamSize": "個人專案",
      "challenges": [
        {
          "title": "API 限制處理",
          "solution": "實現智能請求調度，避免觸及 Telegram API 的頻率限制"
        },
        {
          "title": "功能模組化",
          "solution": "採用插件架構設計，支援動態載入和卸載功能模組"
        },
        {
          "title": "數據持久化",
          "solution": "設計高效的數據存儲方案，支援大量用戶數據的快速存取"
        }
      ],
      "github": null,
      "demo": null
    },
    {
      "id": 5,
      "title": "股票監控系統",
      "description": "專業股票市場監控平台，提供即時報價、技術分析、風險提醒等完整功能",
      "fullDescription": "專業的股票市場監控平台，整合台股即時資訊與技術分析工具。平台提供完整的股票監控功能，包含自訂監控條件、價格異動通知、技術指標計算、投資組合管理等，協助投資者掌握市場動態，做出明智的投資決策。",
      "category": "trading",
      "image": "/images/projects/stock-monitor.jpg",
      "gallery": [
        "/images/projects/stock-monitor-1.jpg",
        "/images/projects/stock-monitor-2.jpg",
        "/images/projects/stock-monitor-3.jpg"
      ],
      "features": [
        "台股即時報價監控",
        "技術指標計算與圖表",
        "自訂監控條件設定",
        "價格異動即時通知",
        "投資組合追蹤管理",
        "歷史資料回測分析",
        "風險評估與控制",
        "多視窗同步顯示"
      ],
      "technologies": [ "C#", "WinForms", "WebSocket", "MS SQL", "證券API" ],
      "status": "production",
      "date": "2021-01-10",
      "duration": "7 個月",
      "teamSize": "個人專案",
      "challenges": [
        {
          "title": "即時數據處理",
          "solution": "採用高效能的事件驅動架構，確保毫秒級的數據更新"
        },
        {
          "title": "大量數據存儲",
          "solution": "實現智能數據壓縮和分層存儲，優化歷史數據存取效率"
        },
        {
          "title": "用戶介面優化",
          "solution": "設計直觀的多視窗介面，支援自訂版面配置和快速操作"
        }
      ],
      "github": null,
      "demo": null
    },
    {
      "id": 6,
      "title": "虛擬貨幣報價數據系統",
      "description": "全球虛擬貨幣市場數據整合平台，提供即時報價、歷史數據、市場分析等服務",
      "fullDescription": "整合全球主要虛擬貨幣交易所的數據聚合平台，提供 Bitcoin、Ethereum、及各種主流加密貨幣的即時報價與市場數據。系統具備多交易所價格比較、套利機會偵測、市場深度分析、價格預警等功能，為加密貨幣投資者提供專業的數據服務。",
      "category": "trading",
      "image": "/images/projects/crypto-data.jpg",
      "gallery": [
        "/images/projects/crypto-data-1.jpg",
        "/images/projects/crypto-data-2.jpg",
        "/images/projects/crypto-data-3.jpg"
      ],
      "features": [
        "多交易所即時報價整合",
        "虛擬貨幣市場深度分析",
        "價格套利機會偵測",
        "歷史數據回測分析",
        "市場趨勢預測指標",
        "自訂價格提醒通知",
        "投資組合績效追蹤",
        "API 數據服務提供"
      ],
      "technologies": [ "C#", ".NET Core", "WebSocket", "MS SQL", "各大交易所API" ],
      "status": "production",
      "date": "2024-09-10",
      "duration": "7 個月",
      "teamSize": "個人專案",
      "challenges": [
        {
          "title": "多交易所整合",
          "solution": "建立統一的數據介面，整合 Binance、Coinbase 等主流交易所 API"
        },
        {
          "title": "高頻數據處理",
          "solution": "採用分散式架構和快取機制，處理每秒數萬筆的價格更新"
        },
        {
          "title": "數據準確性",
          "solution": "實現多重驗證機制，確保跨交易所數據的一致性和準確性"
        }
      ],
      "github": null,
      "demo": null
    },
    {
      "id": 7,
      "title": "Discord Bot 遊戲社群助手",
      "description": "專為遊戲社群設計的 Discord Bot，提供遊戲輔助、社群管理、娛樂互動等豐富功能",
      "fullDescription": "專為 Discord 遊戲社群開發的多功能機器人，整合遊戲資訊查詢、隊伍配對、活動管理等功能。機器人支援自訂指令、權限管理、數據統計等進階功能，能有效提升遊戲社群的互動體驗與管理效率。適用於各種遊戲類型的 Discord 伺服器。",
      "category": "bot",
      "image": "/images/projects/discord-bot.jpg",
      "gallery": [
        "/images/projects/discord-bot.jpg"
      ],
      "features": [
        "遊戲資訊即時查詢",
        "自動隊伍配對系統",
        "活動報名管理",
        "音樂播放功能",
        "積分與排行榜系統",
        "自訂指令與回應",
        "頻道權限管理",
        "伺服器統計分析"
      ],
      "technologies": [ "C#", "Discord.NET", ".NET Core", "Docker" ],
      "status": "production",
      "date": "2020-11-15",
      "duration": "2 個月",
      "teamSize": "個人專案",
      "challenges": [
        {
          "title": "Discord API 整合",
          "solution": "深入研究 Discord.NET 框架，實現穩定的事件處理和指令系統"
        }
      ],
      "github": null,
      "demo": null
    }
  ],
  "statistics": [
    {
      "label": "完成專案",
      "value": "20+",
      "icon": "Folder",
      "color": "#667eea"
    },
    {
      "label": "服務客戶",
      "value": "50+",
      "icon": "User",
      "color": "#f093fb"
    },
    {
      "label": "程式碼行數",
      "value": "100K+",
      "icon": "DocumentCopy",
      "color": "#43e97b"
    },
    {
      "label": "滿意度",
      "value": "98%",
      "icon": "Star",
      "color": "#ffd700"
    }
  ]
}